extends layout

block content
  .profile-container
    .user-info-banner
      img(src='/images/default.jpg', alt='Photo de profil', class='profile-avatar')
      if titre
        p 🎭 Titre : #{titre}
      if jeuPrefere
        p 🎖 Jeu préféré : #{jeuPrefere}
      span Nom d'utilisateur : #{user.NomUtilisateur} | Nombre de jeux possédés : #{user.NombreJeux}

    script.
      function toggleEdit(sectionId) {
        const section = document.getElementById(sectionId);
        section.style.display = section.style.display === 'none' ? 'block' : 'none';
      }

    .profile-actions
      form(action='/profile/edit-name', method='POST')
        button.red-btn(type='button', onclick="toggleEdit('edit-name')") Changer mon nom d'utilisateur

        #edit-name(style='display:none;')
          input(type='text', name='newName', placeholder='Nouveau nom d\'utilisateur', required)
          button.red-btn(type='submit') Valider le changement

      form(action='/profile/edit-password', method='POST')
        button.yellow-btn(type='button', onclick="toggleEdit('edit-password')") Changer mon mot de passe

        #edit-password(style='display:none;')
          input(type='password', name='newPassword', placeholder='Nouveau mot de passe', required)
          button.yellow-btn(type='submit') Valider le changement

      form(action='/logout', method='POST', style='display:inline')
        button(type='submit' class='default-btn') Se déconnecter

      form(action='/profile/delete', method='POST', onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer votre compte ? Cette action est irréversible.')")
        button.blue-btn(type='submit') Supprimer mon compte
    
    

    .section
      h2 Wishlist
      if wishlist.length
        .defilement-slider
          button.left-button ◀
          .defilement-track
            each jeu in wishlist
              .defilement-card
                img(src=jeu.Image, alt=jeu.NomJeu)
                p= jeu.NomJeu
                form(action="/profile/wishlist/delete", method="POST")
                  input(type="hidden", name="IDJeu", value=jeu.IDJeu)
                  button(type="submit") 🗑️
          button.right-button ▶
      else
        p Aucune wishlist

    .section
      h2 Jeux Possédés
      if jeux.length
        .defilement-slider
          button.left-button ◀
          .defilement-track
            each jeu in jeux
              .defilement-card
                img(src=jeu.Image, alt=jeu.NomJeu)
                p= jeu.NomJeu
                form(action="/profile/possede/delete", method="POST")
                  input(type="hidden", name="IDJeu", value=jeu.IDJeu)
                  button(type="submit") 🗑️
          button.right-button ▶
      else
        p Aucun jeu possédé



    .section
      h2 Playlists
      if playlistsGroupees.length
        each playlist in playlistsGroupees
          h3= playlist.NomPlaylist
          .defilement-slider
            button.left-button(type="button") ◀
            .defilement-track
              each jeu in playlist.jeux
                .defilement-card
                  img(src=jeu.Image, alt=jeu.NomJeu)
                  p= jeu.NomJeu
                  form(action="/profile/playlist/delete", method="POST")
                    input(type="hidden", name="IDJeu", value=jeu.IDJeu)
                    input(type="hidden", name="IDPlaylist", value=playlist.IDPlaylist)
                    button(type="submit") 🗑️
            button.right-button(type="button") ▶
      else
        p Aucune playlist enregistrée


    .section
      h2 Proposition(s) de troc
      if trocs.length
        each troc in trocs
          .troc-proposition
            p #{troc.NomDemandeur} souhaite "#{troc.TitreJeuSouhaite}", que vous possédez. Vous pouvez choisir parmi ses jeux pour effectuer un échange.
            form(action="/profile/troc/choisir", method="POST")
              input(type="hidden", name="IDJeuSouhaité", value=troc.IDJeuSouhaite)
              input(type="hidden", name="IDUtilisateurDemandeur", value=troc.IDUtilisateurDemandeur)
              label(for="jeuOffert") Choisissez un de ses jeux :
              select(name="IDJeuOffert", required)
                each jeu in troc.jeuxDemandeur
                  option(value=jeu.IDJeu)= jeu.NomJeu
              button(type="submit") Proposer l'échange
      else
        p Aucune proposition de troc pour le moment.

    .section
      h2 Notification(s) de troc à confirmer
      if notificationsTroc.length
        each notif in notificationsTroc
          .notif-troc
            p #{notif.Message}
            form(action="/profile/troc/reponse", method="POST", style="display:inline")
              input(type="hidden", name="IDNotification", value=notif.IDNotification)
              input(type="hidden", name="reponse", value="accepté")
              button.green-btn(type="submit") Accepter
            form(action="/profile/troc/reponse", method="POST", style="display:inline; margin-left:10px;")
              input(type="hidden", name="IDNotification", value=notif.IDNotification)
              input(type="hidden", name="reponse", value="refusé")
              button.red-btn(type="submit") Refuser
      else
        p Aucune notification de troc en attente.



    if user.IsAdmin
      .section
        h2 Gérer les accès des utilisateurs
        if utilisateurs.length
          table
            thead
              tr
                th Nom d'utilisateur
                th Admin
                th Actions
            tbody
              each u in utilisateurs
                tr
                  td #{u.NomUtilisateur}
                  td #{u.IsAdmin ? 'Oui' : 'Non'}
                  td
                    if !u.IsAdmin
                      form(action='/profile/admin/make-admin', method='POST', style='display:inline')
                        input(type='hidden', name='userId', value=u.IDUtilisateur)
                        button(type='submit') Rendre admin
                    else
                      form(action='/profile/admin/remove-admin', method='POST', style='display:inline')
                        input(type='hidden', name='userId', value=u.IDUtilisateur)
                        button(type='submit') Retirer admin
        else
          p Aucun utilisateur trouvé
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const track = document.querySelector('.wishlist-track');
      const leftBtn = document.querySelector('.left-button');
      const rightBtn = document.querySelector('.right-button');

      let scrollAmount = 0;
      const scrollStep = 300;

      leftBtn.addEventListener('click', () => {
        scrollAmount -= scrollStep;
        if (scrollAmount < 0) scrollAmount = 0;
        track.scrollTo({ left: scrollAmount, behavior: 'smooth' });
      });

      rightBtn.addEventListener('click', () => {
        scrollAmount += scrollStep;
        track.scrollTo({ left: scrollAmount, behavior: 'smooth' });
      });
    });
